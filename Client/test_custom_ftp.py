#!/usr/bin/env python3
"""
Test script ƒë·ªÉ demo custom FTP client thay th·∫ø ftplib
"""

import sys
import os
from custom_ftp import FTP, all_errors, error_perm, error_temp, error_proto
from ftp_command import FTPCommands

def test_custom_ftp():
    """Test custom FTP implementation"""
    print("=== DEMO CUSTOM FTP CLIENT (KH√îNG D√ôNG FTPLIB) ===\n")
    
    # Kh·ªüi t·∫°o FTP client
    ftp = FTP()
    client = FTPCommands(ftp)
    
    print("‚úÖ Custom FTP client ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o th√†nh c√¥ng!")
    print("‚úÖ Thay th·∫ø ho√†n to√†n th∆∞ vi·ªán ftplib b·∫±ng socket programming")
    print("\nüìã C√°c l·ªánh FTP c√≥ s·∫µn:")
    
    commands = [cmd[3:] for cmd in dir(client) if cmd.startswith('do_')]
    for i, cmd in enumerate(commands, 1):
        print(f"  {i:2d}. {cmd}")
    
    print(f"\nüìä T·ªïng c·ªông: {len(commands)} l·ªánh FTP ƒë∆∞·ª£c h·ªó tr·ª£")
    
    print("\nüîß Ki·∫øn tr√∫c Custom FTP:")
    print("  ‚Ä¢ S·ª≠ d·ª•ng socket thay v√¨ ftplib")
    print("  ‚Ä¢ H·ªó tr·ª£ c·∫£ passive v√† active mode")
    print("  ‚Ä¢ X·ª≠ l√Ω binary v√† ASCII transfer")
    print("  ‚Ä¢ T∆∞∆°ng th√≠ch ho√†n to√†n v·ªõi code c≈©")
    
    print("\nüéØ C√°c t√≠nh nƒÉng ch√≠nh:")
    print("  ‚Ä¢ K·∫øt n·ªëi FTP server")
    print("  ‚Ä¢ Upload/Download files")
    print("  ‚Ä¢ Qu·∫£n l√Ω th∆∞ m·ª•c")
    print("  ‚Ä¢ Qu√©t virus t√≠ch h·ª£p")
    print("  ‚Ä¢ H·ªó tr·ª£ wildcard patterns")
    print("  ‚Ä¢ Recursive directory operations")
    
    print("\nüí° C√°ch s·ª≠ d·ª•ng:")
    print("  python3 client.py  # Ch·∫°y command line client")
    print("  python3 main.py    # Ch·∫°y GUI client (c·∫ßn tkinter)")
    
    # Test m·ªôt s·ªë ch·ª©c nƒÉng c∆° b·∫£n
    print("\nüß™ Test c√°c exception handling:")
    try:
        # Test connection error
        test_ftp = FTP()
        test_ftp.connect("nonexistent.server.com", 21, timeout=1)
    except all_errors as e:
        print(f"  ‚úÖ Exception handling ho·∫°t ƒë·ªông: {type(e).__name__}")
    
    print("\nüéâ DEMO HO√ÄN T·∫§T - Custom FTP client s·∫µn s√†ng s·ª≠ d·ª•ng!")
    print("üöÄ Gi·ªù b·∫°n c√≥ th·ªÉ n·ªôp b√†i m√† kh√¥ng c·∫ßn d√πng ftplib!")

def interactive_demo():
    """Demo t∆∞∆°ng t√°c v·ªõi FTP client"""
    print("\n" + "="*60)
    print("INTERACTIVE DEMO - Custom FTP Client")
    print("="*60)
    
    ftp = FTP()
    client = FTPCommands(ftp)
    
    print("\nƒê·ªÉ test v·ªõi server th·∫≠t, b·∫°n c√≥ th·ªÉ d√πng:")
    print("ftp> open test.rebex.net 21")
    print("User: demo")
    print("Password: password")
    print("\nHo·∫∑c g√µ 'help' ƒë·ªÉ xem t·∫•t c·∫£ l·ªánh")
    print("G√µ 'quit' ƒë·ªÉ tho√°t\n")
    
    # Ch·∫°y command loop
    try:
        client.cmdloop()
    except KeyboardInterrupt:
        print("\n\nTho√°t ch∆∞∆°ng tr√¨nh...")
    except Exception as e:
        print(f"\nL·ªói: {e}")

if __name__ == "__main__":
    if len(sys.argv) > 1 and sys.argv[1] == "--interactive":
        interactive_demo()
    else:
        test_custom_ftp()
        
        # H·ªèi c√≥ mu·ªën ch·∫°y interactive demo kh√¥ng
        try:
            choice = input("\nB·∫°n c√≥ mu·ªën th·ª≠ interactive demo? (y/n): ").lower().strip()
            if choice in ['y', 'yes']:
                interactive_demo()
        except KeyboardInterrupt:
            print("\n\nT·∫°m bi·ªát!")